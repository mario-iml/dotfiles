#!/usr/bin/env bash

# Define the root directories to search
root_dirs=("$HOME/Developer" "$HOME/dotfiles")
# specific_dirs now contains directories to be included directly
specific_dirs=("$HOME/dotfiles") # Changed from an array of directories to a single one for the example

if [[ $# -eq 1 ]]; then
  selected=$1
else
  # 1. Search the root directories for non-hidden, non-underscore-prefixed folders at depth 1.
  # 2. Search subdirectories of underscore-prefixed folders at depth 2 (projects inside _uni, _work, etc.).
  find_command=""
  for dir in "${root_dirs[@]}"; do
    # Part A: Find non-underscore-prefixed directories at depth 1 (e.g., ~/Developer/projectA)
    find_command+="find $dir -mindepth 1 -maxdepth 1 -type d ! -name '.*' ! -name '_*' ; "

    # Part B: Find directories at depth 2 that are inside an underscore-prefixed directory (e.g., ~/Developer/_uni/projectB)
    find_command+="find $dir/_*/ -mindepth 1 -maxdepth 1 -type d ! -name '.*' ; "
  done

  # --- MODIFICATION START ---

  # Add the specific_dirs paths to the output stream
  specific_dirs_paths=""
  for dir in "${specific_dirs[@]}"; do
    specific_dirs_paths+="$dir"$'\n' # Add directory path followed by a newline
  done

  # Remove the trailing semicolon and execute the commands.
  # The output of 'find_command' and the 'specific_dirs_paths' are combined and piped to fzf.
  selected=$( (
    eval "$find_command" 2>/dev/null
    echo -e "$specific_dirs_paths" # Add the specific directories
  ) | sort -u | fzf)

# --- MODIFICATION END ---
fi

if [[ -z $selected ]]; then
  exit 0
fi

# ... rest of the script remains the same ...

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  tmux new-session -s "$selected_name" -c "$selected"
  exit 0
fi

if ! tmux has-session -t="$selected_name" 2>/dev/null; then
  tmux new-session -ds "$selected_name" -c "$selected"
fi

if [[ -z $TMUX ]]; then
  tmux attach -t "$selected_name"
else
  tmux switch-client -t "$selected_name"
fi
